[{"/Users/ax/Desktop/projectsic/src/index.js":"1","/Users/ax/Desktop/projectsic/src/reportWebVitals.js":"2","/Users/ax/Desktop/projectsic/src/App.js":"3","/Users/ax/Desktop/projectsic/src/Components/Catalogue.js":"4","/Users/ax/Desktop/projectsic/src/Components/SearchBar.js":"5","/Users/ax/Desktop/projectsic/src/Components/WatchList.js":"6","/Users/ax/Desktop/projectsic/src/Components/MovieDetails.js":"7","/Users/ax/Desktop/projectsic/src/Components/Footer.js":"8","/Users/ax/Desktop/projectsic/src/Components/LinkButton.js":"9","/Users/ax/Desktop/projectsic/src/Components/Suggested.js":"10","/Users/ax/Desktop/projectsic/src/firebase.js":"11","/Users/ax/Desktop/projectsic/src/Components/NewMovies.js":"12"},{"size":500,"mtime":1607559995179,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607559995180,"results":"15","hashOfConfig":"14"},{"size":1126,"mtime":1607644112544,"results":"16","hashOfConfig":"14"},{"size":2355,"mtime":1607638755271,"results":"17","hashOfConfig":"14"},{"size":1125,"mtime":1607626911515,"results":"18","hashOfConfig":"14"},{"size":3999,"mtime":1607638755272,"results":"19","hashOfConfig":"14"},{"size":1754,"mtime":1607638755271,"results":"20","hashOfConfig":"14"},{"size":316,"mtime":1607626552129,"results":"21","hashOfConfig":"14"},{"size":943,"mtime":1607626872516,"results":"22","hashOfConfig":"14"},{"size":3899,"mtime":1607642971252,"results":"23","hashOfConfig":"14"},{"size":438,"mtime":1607559995179,"results":"24","hashOfConfig":"14"},{"size":898,"mtime":1607642102533,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"7jhjk5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/Users/ax/Desktop/projectsic/src/index.js",[],["54","55"],"/Users/ax/Desktop/projectsic/src/reportWebVitals.js",[],"/Users/ax/Desktop/projectsic/src/App.js",[],"/Users/ax/Desktop/projectsic/src/Components/Catalogue.js",["56"],"import Axios from 'axios';\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Catalogue extends Component {\n    constructor() {\n        super();\n        this.state = {\n            movies: []\n        }\n    }\n\n    componentDidMount() {\n        // CHECKING FOR IF THE USER HITS HOMEPAGE ROUTE AT '/' OR SEARCH ROUTE AT '/SERACH/SEARCH-TERM'\n\n        // if the user hits '/search/search-term/' we can access the url search param by this.props.match.param.searchQueryHere\n        if (this.props.match.params.searchQueryHere) {\n            this.theApiCall(this.props.match.params.searchQueryHere);\n        } else {\n            // make the API call without search query, this will happen when user hits homepage at '/'\n            this.theApiCall();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.searchQueryHere !== this.props.match.params.searchQueryHere) {\n            this.theApiCall(this.props.match.params.searchQueryHere);\n        }\n    }\n\n    theApiCall = (searchQuery) => {\n        let endPointWord = 'discover';\n        if (searchQuery) {\n            endPointWord = 'search';\n        }\n        Axios({\n            url: `https://api.themoviedb.org/3/${endPointWord}/movie`,\n            params: {\n                api_key: '47f7f0a78ce3e2f1427da95247b6bc0e',\n                language: 'en-US',\n                page: 1,\n                query: searchQuery\n            }\n        }).then((movies) => {\n            this.setState({\n                movies: movies.data.results\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"catalogue flex\">\n                {\n                    this.state.movies.map((movie) => {\n                        if (movie.poster_path !== null) {\n                            return (\n                                <div className=\"movie\" key={movie.id}>\n                                    <Link to={`/movie/${movie.id}`}>\n                                        <img src={`http://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={`Poster for ${movie.original_title}`} />\n                                    </Link>\n                                </div>\n                            )\n                        }\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Catalogue;","/Users/ax/Desktop/projectsic/src/Components/SearchBar.js",[],"/Users/ax/Desktop/projectsic/src/Components/WatchList.js",["57","58"],"import { Component } from 'react';\nimport firebase from '../firebase';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTimes, faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nlibrary.add(faTimes, faAngleDoubleRight);\n\n\nclass WatchList extends Component {\n    constructor() {\n        super();\n        this.state = {\n            savedRecommendations: [],\n            sidebarOpen: false\n        }\n    }\n\n    componentDidMount() {\n        const dbRef = firebase.database().ref();\n        dbRef.on('value', (data) => {\n            const firebaseDataObj = data.val();\n            let firebaseData = [];\n            for (let prop in firebaseDataObj) {\n                const movie = firebaseDataObj[prop];\n                firebaseData.push(movie);\n            }\n            const firebaseArray = Object.values(firebaseData)\n            this.setState({\n                savedRecommendations: firebaseArray,\n            })\n        });\n    }\n\n    removeFromFirebase = () => {\n        firebase.database().ref('/').remove();\n    }\n\n    toggleWatchList = () => {\n        this.setState({\n            sidebarOpen: !this.state.sidebarOpen\n        })\n    }\n\n    render() {\n        let sidebarClassname = this.state.sidebarOpen ? 'watchListOpen' : 'watchList';\n        let togglerClassname = this.state.sidebarOpen ? 'togglerOpen' : 'toggler';\n        let removeButtonClassname = this.state.sidebarOpen ? 'removeButtonOpen' : 'removeButton';\n        if (this.state.savedRecommendations.length !== 0){\n            return (\n                <>\n                    <ul className={sidebarClassname}>\n                        <div className={togglerClassname} tabIndex=\"1\" onClick={this.toggleWatchList}><FontAwesomeIcon icon={faAngleDoubleRight} /></div>\n                        <h2>Because you liked:</h2>\n                        {\n                            this.state.savedRecommendations.map((firebaseMovie, index) => {\n                                const primaryMovie = firebaseMovie[0];\n                                {\n                                    return (\n                                        <div key={index}>\n                                            <h3>{primaryMovie.original_title}</h3>\n                                        </div>\n                                    )\n                                }\n                            })\n                        }\n                        <h2>You should watch:</h2>\n                        {\n                            this.state.savedRecommendations.map((firebaseMovie) => {\n                                const arrayOfMovies = firebaseMovie[1];\n                                if (arrayOfMovies) {\n                                    return (\n                                        arrayOfMovies.map((movie) => {\n                                            return (\n                                                <div key={movie.id}>\n                                                    <li>\n                                                        <h3>{movie.title}</h3>\n                                                    </li>\n                                                </div>\n                                            )\n                                        })\n                                    )\n                                }\n                            })\n                        }\n                        <button className={`${removeButtonClassname} ${this.state.savedRecommendations.length === 0 ? \"\" : \"show\"}`}\n                            onClick={this.removeFromFirebase}><FontAwesomeIcon icon={['fas', 'times']} />\n                        </button>\n                    </ul>\n                </>\n            )\n    } else {\n            return (\n                <ul className=\"watchList\">\n                    <p>Nothing to see here</p>\n                </ul>\n            )\n        }\n    }\n}\n\nexport default WatchList;","/Users/ax/Desktop/projectsic/src/Components/MovieDetails.js",[],"/Users/ax/Desktop/projectsic/src/Components/Footer.js",[],"/Users/ax/Desktop/projectsic/src/Components/LinkButton.js",[],"/Users/ax/Desktop/projectsic/src/Components/Suggested.js",[],"/Users/ax/Desktop/projectsic/src/firebase.js",[],"/Users/ax/Desktop/projectsic/src/Components/NewMovies.js",["59"],"import { Component } from 'react';\n\n\nclass NewMovies extends Component {\n\n    render() {\n        return (\n            <div className=\"movieResults\">\n                <h3>Results</h3>\n                <div className=\"flex dropDownResult\">\n                    {\n                        this.props.foreignMoviesProp.map((movie) => {\n                            if (movie.poster_path !== null) {\n                            return (\n                                <div key={movie.id}\n                                    className=\"movieDropDown\">\n                                    <img src={`http://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title} />\n                                </div>\n                            )\n                            }\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NewMovies;",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":55,"column":51,"nodeType":"66","messageId":"67","endLine":55,"endColumn":53},{"ruleId":"68","severity":1,"message":"69","line":57,"column":33,"nodeType":"70","messageId":"71","endLine":63,"endColumn":34},{"ruleId":"64","severity":1,"message":"65","line":68,"column":81,"nodeType":"66","messageId":"67","endLine":68,"endColumn":83},{"ruleId":"64","severity":1,"message":"65","line":12,"column":66,"nodeType":"66","messageId":"67","endLine":12,"endColumn":68},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]