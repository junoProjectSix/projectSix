[{"/Users/ax/Desktop/projectsic/src/index.js":"1","/Users/ax/Desktop/projectsic/src/App.js":"2","/Users/ax/Desktop/projectsic/src/reportWebVitals.js":"3","/Users/ax/Desktop/projectsic/src/Components/WatchList.js":"4","/Users/ax/Desktop/projectsic/src/Components/Catalogue.js":"5","/Users/ax/Desktop/projectsic/src/Components/SearchBar.js":"6","/Users/ax/Desktop/projectsic/src/Components/SearchError.js":"7","/Users/ax/Desktop/projectsic/src/Components/MovieDetails.js":"8","/Users/ax/Desktop/projectsic/src/Components/LinkButton.js":"9","/Users/ax/Desktop/projectsic/src/Components/Suggested.js":"10","/Users/ax/Desktop/projectsic/src/firebase.js":"11","/Users/ax/Desktop/projectsic/src/Components/NewMovies.js":"12","/Users/ax/Desktop/projectsic/src/Components/Footer.js":"13"},{"size":500,"mtime":1607559995179,"results":"14","hashOfConfig":"15"},{"size":1168,"mtime":1607564025479,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607559995180,"results":"17","hashOfConfig":"15"},{"size":2160,"mtime":1607559995179,"results":"18","hashOfConfig":"15"},{"size":2343,"mtime":1607560253314,"results":"19","hashOfConfig":"15"},{"size":706,"mtime":1607561687307,"results":"20","hashOfConfig":"15"},{"size":212,"mtime":1607559995179,"results":"21","hashOfConfig":"15"},{"size":1821,"mtime":1607561329732,"results":"22","hashOfConfig":"15"},{"size":875,"mtime":1607559995178,"results":"23","hashOfConfig":"15"},{"size":3381,"mtime":1607563509439,"results":"24","hashOfConfig":"15"},{"size":438,"mtime":1607559995179,"results":"25","hashOfConfig":"15"},{"size":909,"mtime":1607562929884,"results":"26","hashOfConfig":"15"},{"size":245,"mtime":1607563917918,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7jhjk5",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ax/Desktop/projectsic/src/index.js",[],"/Users/ax/Desktop/projectsic/src/App.js",[],"/Users/ax/Desktop/projectsic/src/reportWebVitals.js",[],"/Users/ax/Desktop/projectsic/src/Components/WatchList.js",["58","59","60"],"import { Component } from 'react';\nimport firebase from '../firebase';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faHeart, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nlibrary.add(faTimes);\n\n\nclass WatchList extends Component {\n    constructor() {\n        super();\n        this.state = {\n            savedRecommendations: [],\n        }\n    }\n\n    componentDidMount() {\n        const dbRef = firebase.database().ref();\n        dbRef.on('value', (data) => {\n            const firebaseDataObj = data.val();\n            let firebaseData = [];\n            for (let prop in firebaseDataObj) {\n                const movie = firebaseDataObj[prop];\n                firebaseData.push(movie);\n            }\n            const firebaseArray = Object.values(firebaseData)\n            this.setState({\n                savedRecommendations: firebaseArray,\n            })\n        });\n    }\n\nremoveFromFirebase = () => {\n    firebase.database().ref('/').remove();\n}\n\n    render() {\n        return (\n            <>\n                <ul>\n                {\n                    this.state.savedRecommendations.map((firebaseMovie) => {\n                        const primaryMovie = firebaseMovie[0];\n                        const arrayOfMovies = firebaseMovie[1];\n                        if (arrayOfMovies) {\n                        return (\n                            arrayOfMovies.map((movie) => {\n                                return (\n                                    <div key={movie.id}>\n                                        <li>\n                                            <h2>{movie.title}</h2>\n                                        </li>\n                                    </div>\n                                )\n                            })\n                            )\n                        }\n                        })\n                    }\n                </ul>\n                    <button\n                    onClick={this.removeFromFirebase}><FontAwesomeIcon icon={['fas', 'times']}/></button>\n            </>\n        )\n    }\n}\n\nexport default WatchList;",["61","62"],"/Users/ax/Desktop/projectsic/src/Components/Catalogue.js",["63"],"import Axios from 'axios';\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Catalogue extends Component {\n    constructor() {\n        super();\n        this.state = {\n            movies: []\n        }\n    }\n\n    componentDidMount() {\n        // CHECKING FOR IF THE USER HITS HOMEPAGE ROUTE AT '/' OR SEARCH ROUTE AT '/SERACH/SEARCH-TERM'\n\n        // if the user hits '/search/search-term/' we can access the url search param by this.props.match.param.searchQueryHere\n        if (this.props.match.params.searchQueryHere) {\n            this.theApiCall(this.props.match.params.searchQueryHere);\n        } else {\n            // make the API call without search query, this will happen when user hits homepage at '/'\n            this.theApiCall();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.searchQueryHere !== this.props.match.params.searchQueryHere) {\n            this.theApiCall(this.props.match.params.searchQueryHere);\n        }\n    }\n\n    theApiCall = (searchQuery) => {\n        let endPointWord = 'discover';\n        if (searchQuery) {\n            endPointWord = 'search';\n        }\n        Axios({\n            url: `https://api.themoviedb.org/3/${endPointWord}/movie`,\n            params: {\n                api_key: '47f7f0a78ce3e2f1427da95247b6bc0e',\n                language: 'en-US',\n                page: 1,\n                query: searchQuery\n            }\n        }).then((movies) => {\n            this.setState({\n                movies: movies.data.results\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"catalogue flex\">\n                {\n                    this.state.movies.map((movie) => {\n                            if (movie.poster_path !== null) {\n                                return (\n                            <div className=\"movie\" key={movie.id}>\n                                <Link to={`/movie/${movie.id}`}>\n                                    <img src={`http://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={`Poster for ${movie.original_title}`} />\n                                </Link>\n                            </div>\n                            )\n                        }\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Catalogue;","/Users/ax/Desktop/projectsic/src/Components/SearchBar.js",[],"/Users/ax/Desktop/projectsic/src/Components/SearchError.js",[],"/Users/ax/Desktop/projectsic/src/Components/MovieDetails.js",[],"/Users/ax/Desktop/projectsic/src/Components/LinkButton.js",[],"/Users/ax/Desktop/projectsic/src/Components/Suggested.js",["64"],"import Axios from 'axios';\nimport { Component } from 'react';\nimport firebase from '../firebase.js';\nimport NewMovies from './NewMovies.js';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faHeart, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nlibrary.add(faHeart);\n\nclass Suggested extends Component {\n    constructor() {\n        super();\n        this.state = {\n            userSelection: '',\n            foreignMovie: []\n        }\n    }\n\n    axiosCall = (val) => {\n        let randomPage = (pageNumber) => { return (Math.floor(Math.random() * Math.floor(pageNumber))) };\n        if (val) {\n            Axios({\n                url: `https://api.themoviedb.org/3/discover/movie/`,\n                params: {\n                    api_key: '47f7f0a78ce3e2f1427da95247b6bc0e',\n                    language: val,\n                    with_genres: this.props.genre,\n                    page: randomPage(100)\n                },\n            }).then((res) => {\n                let reducedData = res.data.results.slice(0, 6);\n                this.setState({\n                    foreignMovie: reducedData\n                })\n            }).catch((errorObj) => {\n                alert('error')\n                //maybe display 404 later\n            })\n        } else {\n            alert('Please select a language')\n        }\n    }\n\n    saveSelection = () => {\n        const dbRef = firebase.database().ref();\n        console.log('after like button', this.state.foreignMovie);\n        if (this.state.foreignMovie.length === 0) {\n            alert('Nothing has been selected yet')\n        }\n        else {\n            console.log('lucas')\n            dbRef.push([this.props.movie, this.state.foreignMovie])\n        }\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            userSelection: e.target.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.axiosCall(this.state.userSelection);\n    }\n\n    render() {\n        return (\n            <div>\n                <br />\n                <form className=\"flex column dropDownForm\">\n                    <label htmlFor=\"languagesDropdown\">Interested in something similar but in a different language?</label>\n                    <div\n                        className=\"flex\"\n                    >\n                        <select\n                            name=\"languagesDropdown\"\n                            id=\"languagesDropdown\"\n                            onChange={this.handleInputChange}\n                            value={this.state.userSelection}>\n                            <option value=\"\" disabled>Language?</option>\n                            <option value=\"de\">German</option>\n                            <option value=\"es\">Spanish</option>\n                        </select>\n                        <button\n                            className=\"dropdown-btn\"\n                            onClick={this.handleSubmit}>Show me</button></div>\n                </form>\n                <button className=\"favourite\" onClick={this.saveSelection}>\n                    <FontAwesomeIcon icon={['fa', 'heart']} />\n                </button>\n                <NewMovies\n                    foreignMoviesProp={this.state.foreignMovie} />\n            </div>\n        )\n    }\n}\n\nexport default Suggested;","/Users/ax/Desktop/projectsic/src/firebase.js",[],"/Users/ax/Desktop/projectsic/src/Components/NewMovies.js",[],"/Users/ax/Desktop/projectsic/src/Components/Footer.js",[],{"ruleId":"65","severity":1,"message":"66","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":42,"column":73,"nodeType":"71","messageId":"72","endLine":42,"endColumn":75},{"ruleId":"65","severity":1,"message":"73","line":43,"column":31,"nodeType":"67","messageId":"68","endLine":43,"endColumn":43},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"69","severity":1,"message":"70","line":55,"column":51,"nodeType":"71","messageId":"72","endLine":55,"endColumn":53},{"ruleId":"65","severity":1,"message":"78","line":6,"column":19,"nodeType":"67","messageId":"68","endLine":6,"endColumn":26},"no-unused-vars","'faHeart' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'primaryMovie' is assigned a value but never used.","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"'faTimes' is defined but never used.","no-global-assign","no-unsafe-negation"]